# CSS position 的五种属性值

## 五种属性值：`relative`, `absolute`, `fixed`, `static`, `sticky`

### `relative` 相对定位
- 元素不脱离文档流（元素的原来的位置会被保留，即使改变位置也不会占用新的位置）
- 不会影响元素本身特性（块级元素、内联元素均保持其原本特性）
- 相对于自身定位（没有设置偏移量时，无影响）
- 层级提升
### `absolute` 绝对定位
- 完全脱离文档流（在文档中不再占用位置）
- 使块级元素没有设置宽度时支持内容撑开宽度，使行内元素支持设置宽高属性
- 相对于最近一个有定位的父视图（逐层向上查找，直至 `document`）
- 一般配合相对定位使用，子绝父相
- 层级提升
### `fixed` 固定定位
- 脱离文档流（在文档中不占用位置）
- 相对于浏览器窗口进行定位（1、如果使用 `margin` 而非 `top` 等，虽然本质上是相对于窗口定位，但效果上是相对于父元素定位；2、父元素使用动画，如animation 等，不管使用 `margin` 还是 `top` 元素都会跟着父元素移动；3、如果父元素的 `z-index` 比同级元素低，即使 `fixed` 的元素` z-index` 高也会被父元素同级元素覆盖，相反，父元素 `z-index` 高，即使 `fixed` 元素 `z-index` 比父元素同级元素低，也不会被覆盖；所以，`fixed` 元素若要以窗口进行定位最好放在 `body` 标签内）
- 层级提升
### `static` 默认值
- 不脱离文档流（忽略 `top`, `bottom`, `left`, `right`, `z-index`）
### `sticky` 粘性定位
- 该定位基于用户滚动的位置
- 行为类似于 relative, 而当页面滚动超出目标区域时，它就类似于 `fixed`，固定在目标位置
- 存在兼容性问题

另外，还可以设置其它两种值：`inherit`, `initial`
### `inherit`
- 从父元素继承 `position` 属性的值
### `initial`
- 设置属性值为默认值，支持任意 CSS 属性

### 其它
改变层级：`z-index`, 值越大层级越高越在上面，两个定位元素时，后面的会覆盖前面的
